name: nginx-构建和提交docker

on:
  push:
    branches:
      - main
    paths: 
      - "nginx/**"
      - "common/**"
      - ".github/workflows/nginx.yml"
      - "!**.md"


jobs:
  pre_job:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip_local: ${{ steps.skip_check_local.outputs.should_skip }}
      should_skip: ${{ steps.skip_check_docs.outputs.should_skip }}


    steps:
      - id: skip_check_docs
        name: 跳过文档
        uses: fkirc/skip-duplicate-actions@master
        with:
          github_token: ${{ github.token }}
          paths_ignore: '["**/README.md", "**/docs/**"]'
  
      - id: skip_check_local
        name: 跳过指定路径
        uses: fkirc/skip-duplicate-actions@master
        with:
          github_token: ${{ github.token }}
          paths: '["nginx/**", ".github/workflows/nginx.yml"]'
  
  setup-build-publish:
    needs: pre_job
    runs-on: ubuntu-latest
    name: 构建和推送docker镜像
    if: ${{ needs.pre_job.outputs.should_skip == 'false' && needs.pre_job.outputs.should_skip_local == 'false' }}
    steps:
    
    - name: Checkout
      # 使用action库  actions/checkout获取源码
      uses: actions/checkout@v2.3.2

    



           
    - name: stream
      uses: docker/build-push-action@v1.1.0
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: adockero
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.PASSWORD }}
        # Docker repository to tag the image with
        repository: adockero/nginx
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: stream
        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        path: ./stream
        dockerfile: nginx/stream/Dockerfile
        # Always attempt to pull a newer version of the image
        always_pull: true
        # Comma-delimited list of build-time variables
        # build_args: BASE_FORM=adockero/php-nginx:7.4-alpine-base-fpm
        # Adds labels with git repository information to the built image
        add_git_labels: true  

           
    - name: nginx-php-git-opcache-alpine
      uses: docker/build-push-action@v1.1.0
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: adockero
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.PASSWORD }}
        # Docker repository to tag the image with
        repository: adockero/nginx
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: php-nginx-git-opcache-alpine
        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        path: ./
        dockerfile: nginx/php-git-opcache/Dockerfile.php-git-opcache.alpine
        # Always attempt to pull a newer version of the image
        always_pull: true
        # Comma-delimited list of build-time variables
        build_args: BASE_FORM=adockero/php-nginx:7.4-alpine-base-fpm
        # Adds labels with git repository information to the built image
        add_git_labels: true  

    
           
    - name: nginx-php-git-opcache-alpine
      uses: docker/build-push-action@v1.1.0
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: adockero
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.PASSWORD }}
        # Docker repository to tag the image with
        repository: adockero/nginx
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: php-git-opcache-alpine
        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        path: ./
        dockerfile: nginx/php-git-opcache/Dockerfile.php-git-opcache.alpine
        # Always attempt to pull a newer version of the image
        always_pull: true
        # Comma-delimited list of build-time variables
        build_args: BASE_FORM=nginx:alpine
        # Adds labels with git repository information to the built image
        add_git_labels: true  
  


             
    - name: nginx-php-git-opcache-centos7
      uses: docker/build-push-action@v1.1.0
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: adockero
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.PASSWORD }}
        # Docker repository to tag the image with
        repository: adockero/nginx
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: php-git-opcache-centos7
        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        path: ./
        dockerfile: nginx/php-git-opcache/Dockerfile.php-git-opcache.centos
        # Always attempt to pull a newer version of the image
        always_pull: true
        # Comma-delimited list of build-time variables
        # build_args: BASE_FORM=nginx:alpine
        # Adds labels with git repository information to the built image
        add_git_labels: true  


              
    - name: nginx-openresty
      uses: docker/build-push-action@v1.1.0
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: adockero
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.PASSWORD }}
        # Docker repository to tag the image with
        repository: adockero/nginx
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: openresty
        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        path: ./nginx/openresty
        dockerfile: nginx/openresty/Dockerfile
        # Always attempt to pull a newer version of the image
        always_pull: true
        # 构建参数
        # build_args: arg1=value1,arg2=value2
        # Adds labels with git repository information to the built image
        add_git_labels: true  
   
   


              
    - name: nginx-http_proxy_connect
      uses: docker/build-push-action@v1.1.0
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: adockero
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.PASSWORD }}
        # Docker repository to tag the image with
        repository: adockero/nginx
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: http_proxy_connect-1.18.0
        build_args: VERSION=1.18.0
        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        path: ./nginx
        dockerfile: nginx/Dockerfile.http_proxy_connect
        # Always attempt to pull a newer version of the image
        always_pull: true
        # Comma-delimited list of build-time variables
        # build_args: arg1=value1,arg2=value2
        # Adds labels with git repository information to the built image
        add_git_labels: true  
    
    
           
    - name: nginx-update
      uses: docker/build-push-action@v1.1.0
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: adockero
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.PASSWORD }}
        # Docker repository to tag the image with
        repository: adockero/nginx
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: update
        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        path: ./nginx
        dockerfile: nginx/Dockerfile.update
        # Always attempt to pull a newer version of the image
        always_pull: true
        # Comma-delimited list of build-time variables
        # build_args: arg1=value1,arg2=value2
        # Adds labels with git repository information to the built image
        add_git_labels: true  
  
            

        



              
    # - name: nginx-skywalking
    #   uses: docker/build-push-action@v1.1.0
    #   with:
    #     # Username used to log in to a Docker registry. If not set then no login will occur
    #     username: adockero
    #     # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
    #     password: ${{ secrets.PASSWORD }}
    #     # Docker repository to tag the image with
    #     repository: adockero/nginx
    #     # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
    #     tags: skywalking
    #     # Path to the Dockerfile (Default is '{path}/Dockerfile')
    #     path: ./nginx
    #     dockerfile: nginx/Dockerfile.skywalking
    #     # Always attempt to pull a newer version of the image
    #     always_pull: true
    #     # Comma-delimited list of build-time variables
    #     # build_args: arg1=value1,arg2=value2
    #     # Adds labels with git repository information to the built image
    #     add_git_labels: true
        


